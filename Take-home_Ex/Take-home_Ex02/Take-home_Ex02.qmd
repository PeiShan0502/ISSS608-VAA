---
title: "Take-home Exercise 1 Part 2: DataVis Makeover"
author: "Kwok Pei Shan"
date: "April 30, 2024"
date-modified: "May 5, 2024"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

## **Introduction**

In this take-home exercise, we will select one data visualisation and critic it in terms of clarity and aesthetics. We will then remake the data visualisation by using ggplot2, ggplot2 extensions and tidyverse packages.

## **Getting Started**

### **Load R packages**

First, we install and load the following R packages:

```{r}
pacman::p_load(ggdist, ggridges, ggthemes,
               gganimate, ggrepel,
               patchwork, colorspace,
               tidyverse)
```

### **Import Data**

Then we import the necessary data:

```{r}
q1_23 <- read_csv("data/ResidentialTransaction20240308160536.csv")
q2_23 <- read_csv("data/ResidentialTransaction20240308160736.csv")
q3_23 <- read_csv("data/ResidentialTransaction20240308161009.csv")
q4_23 <- read_csv("data/ResidentialTransaction20240308161109.csv")
q1_24 <- read_csv("data/ResidentialTransaction20240414220633.csv")
```

The code chunk below combines all the data from 2023 and 2024 Q1 into one data set:

```{r}
private_property_data <- rbind(q1_23, q2_23, q3_23, q4_23, q1_24)
```

## **Critic Data Visualisation**

Submission taken from: [**Distribution of Private Residential Market (1st quarter of 2023 - 1st quarter of 2024)**](https://isss608-zjho008.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#distribution-of-private-residential-market-1st-quarter-of-2023---1st-quarter-of-2024)

This is the original histogram:

```{r}
ggplot(data=private_property_data, 
       aes(x= `Unit Price ($ PSM)`, 
           fill = `Property Type`)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

[Clarity:]{.underline}

-   It is clear because y-axis starts from 0, and the height of 2D columns are easy to gauge.

-   Stacked histogram makes it difficult to gauge the height of the columns for each property type, and hence itâ€™s difficult to see the distribution of prices for each property type. For example, detached house and semi-detached house can hardly be seen in the histogram.

-   Y-axis label axis - it may not be clear to the viewer, that the count is actually referring to the no. of transactions.

[Aesthetics:]{.underline}

-   Good font selection.

-   But there are too many colours which can be visual sensory overload and distracting for the viewer.

## Improvement in Data Visualisation

### Apartment, Condominium, and Terrace House

The code chunks below filter the combined data set to show only "Apartment" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Apartment:

```{r}
apartment <- filter(private_property_data, `Property Type` == 'Apartment')

apartment
```

```{r}
p1 <- ggplot(data=apartment, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Apartment")

p1
```

Similarly, the code chunks below filter the combined data set to show only "Condominium" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Condominium:

```{r}
condo <- filter(private_property_data, `Property Type` == 'Condominium')

condo
```

```{r}
p2 <- ggplot(data=condo, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Condominium")

p2
```

Similarly, the code chunks below filter the combined data set to show only "Terrace House" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Terrace House:

```{r}
terrace_house <- filter(private_property_data, `Property Type` == 'Terrace House')

terrace_house
```

```{r}
p3 <- ggplot(data=terrace_house, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Terrace House")

p3
```

Since we see that Apartment, Condominium and Terrace House all have the same range of Unit Price (\$ PSM), we put them together to compare the distributions:

```{r}
((p1 / p2) / p3) +
  plot_annotation(title = 'Property Prices, 2023 to 2024 Q1')
```

### Detached House and Semi-Detached House

The code chunks below filter the combined data set to show only "Detached House" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Detached House:

```{r}
detached_house <- filter(private_property_data, `Property Type` == 'Detached House')

detached_house
```

```{r}
p4 <- ggplot(data=detached_house, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Detached House")

p4
```

Similarly, the code chunks below filter the combined data set to show only "Semi-Detached House" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Semi-Detached House:

```{r}
semi_detached <- filter(private_property_data, `Property Type` == 'Semi-Detached House')

semi_detached
```

```{r}
p5 <- ggplot(data=semi_detached, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Semi-Detached House")

p5
```

Again, since we see that both Detached House and Semi-Detached House have the same range of Unit Price (\$ PSM), we put them together to compare the distributions:

```{r}
(p4 / p5) +
  plot_annotation(title = 'Detached House and Semi-Detached House Property Prices, 2023 to 2024 Q1')
```

### Executive Condominium

The code chunks below filter the combined data set to show only "Executive Condominium" property type, and then plots a histogram to show the distribution of Unit Price (\$ PSM) for Executive Condominium:

```{r}
exec_condo <- filter(private_property_data, `Property Type` == 'Executive Condominium')

exec_condo
```

```{r}
p5 <- ggplot(data=exec_condo, 
       aes(x= `Unit Price ($ PSM)`)) +
  geom_histogram(bins=20, 
                 color="grey30",
                 fill = "grey") +
  ylab('No. of Transactions') +
  ggtitle("Executive Condominium")

p5
```

## Conclusion

-   The main flaws of the original histogram is that there are too many colours which are distracting. Stacked histogram also makes it difficult to see the distribution of prices for each property type - for example, detached house and semi-detached house can hardly be seen in the histogram.

-   To improve that, we came up with 3 visualisations:

    -   Apartment, Condo, and Terrace House put together in the same plot so that the viewer can compare the distribution of prices between the 3 property types.

    -   Detached House and Semi-Detached House are put together in the same plot, for the same reason stated above.

    -   Executive Condo is on its own, as the range of Unit Price (\$ PSM) is different from the other property types.

-   This would hopefully make it clearer to the viewer and the colours used are neutral as well, which suits the nature of the data that we are presenting (not trying to show something is good or bad).
