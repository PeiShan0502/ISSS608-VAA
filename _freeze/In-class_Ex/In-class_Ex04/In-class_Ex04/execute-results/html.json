{
  "hash": "c20be88f5c47c9e6645b37a0f2d869c8",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 4\"\nauthor: Kwok Pei Shan\ndate: \"May 4, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# Visual Statistical Analysis\n\n(continue from Hands-on Ex4a)\n\n## Install R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggstatsplot) \n```\n:::\n\n\n`tidyr`, `dplyr`, `ggplot2`, `readr` is all part of tidyverse package.\n\n## Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv('data/Exam_data.csv', show_col_types = FALSE)\n```\n:::\n\n\n## Visualisations using `ggstatsplot`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\", \n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#student t-test\n#blue dashed line represent Mean\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#type = \"non-parametric\"\n\nset.seed(1234)\n\np <- gghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"np\", \n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n\np\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Wilcoxon test\n#blue dashed line represents Median\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_stats(p)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$subtitle_data\n# A tibble: 1 Ã— 12\n  statistic  p.value method                    alternative effectsize       \n      <dbl>    <dbl> <chr>                     <chr>       <chr>            \n1     38743 3.43e-16 Wilcoxon signed rank test two.sided   r (rank biserial)\n  estimate conf.level conf.low conf.high conf.method n.obs expression\n     <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> <list>    \n1    0.528       0.95    0.430     0.613 normal        322 <language>\n\n$caption_data\nNULL\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n```\n:::\n:::\n\n\n`type = \"robust\"`\n\n-   uses bootstrap method to calculate test statistic\n\n-   blue dashed line: shows trimmed because it removes outliers\n\n`type = \"bayes\"`\n\n-   blue dashed line: MAP - using simulated values and not raw data\n\ntry putting `normal.curve = TRUE` (default is FALSE)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#type = \"bayes\"\n#normal.curve = TRUE with line width = 0.5\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\", \n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = TRUE,\n  normal.curve.args = list(linewidth = 0.5),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggdotplotstats(\n  data = exam,\n  x = ENGLISH,\n  y = CLASS,\n  title = \"\",\n  xlab = \"\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nDoes sorting based on English scores, and adds in average line\n\nThe above dot plot shows that class 3D actually did better than class 3C in English.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_long <- exam %>%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to = \"SUBJECT\",\n    values_to = \"SCORES\") %>%\n  filter(CLASS == \"3A\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggwithinstats(\n  data = filter(exam_long,\n                SUBJECT %in%\n                  c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT,\n  y = SCORES,\n  type = \"p\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE, \n  label.var = ID,\n  label.expression = ENGLISH > 90 & MATHS > 90,\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#try marginal = FALSE\n#label.var: means label.variable\n#pick up student ID of students where ENGLISH > 90 and MATHS > 90. \n#using Pearson correlation because both variables are continuous. \n#student t-test since type = parametric (using default value since it's not specified)\n```\n:::\n\n\nFocus for today: `performance` package of [easystats](https://easystats.github.io/easystats/)\n\n# Visualising Models\n\n(continue from Hands-on Ex4b)\n\n## Visualising Regression Parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt <- parameters(model1)\n```\n:::\n\n\n# Funnel Plots for Fair Comparison\n\n(continue from Hands-on Ex4c)\n\nFunnel plot gives us a framework to do comparison.\n",
    "supporting": [
      "In-class_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}